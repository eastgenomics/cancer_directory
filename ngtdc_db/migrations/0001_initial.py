# Generated by Django 2.2.23 on 2021-08-05 11:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CancerType',
            fields=[
                ('cancer_id', models.AutoField(primary_key=True, serialize=False)),
                ('cancer_type', models.CharField(max_length=25, verbose_name='Cancer Type')),
            ],
        ),
        migrations.CreateModel(
            name='CITTComment',
            fields=[
                ('citt_id', models.AutoField(primary_key=True, serialize=False)),
                ('citt_comment', models.TextField(verbose_name='CITT Comment')),
            ],
        ),
        migrations.CreateModel(
            name='ClinicalIndication',
            fields=[
                ('ci_code', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='CI Code')),
                ('ci_name', models.TextField(verbose_name='CI Name')),
                ('cancer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.CancerType', verbose_name='Cancer Type')),
            ],
        ),
        migrations.CreateModel(
            name='CommissioningCategory',
            fields=[
                ('cc_id', models.AutoField(primary_key=True, serialize=False)),
                ('commissioning', models.CharField(max_length=10, verbose_name='Commissioning Category')),
            ],
        ),
        migrations.CreateModel(
            name='DesirableTarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EssentialTarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OptimalFamilyStructure',
            fields=[
                ('family_id', models.AutoField(primary_key=True, serialize=False)),
                ('family_structure', models.CharField(max_length=10, verbose_name='Optimal Family Structure')),
            ],
        ),
        migrations.CreateModel(
            name='SpecialistTestGroup',
            fields=[
                ('specialist_id', models.AutoField(primary_key=True, serialize=False)),
                ('specialist_test_group', models.CharField(max_length=25, verbose_name='Specialist Test Group')),
            ],
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('target_id', models.AutoField(primary_key=True, serialize=False)),
                ('target', models.CharField(max_length=100, verbose_name='Target')),
                ('hgnc_id', models.CharField(max_length=50, verbose_name='HGNC ID')),
            ],
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('tech_id', models.AutoField(primary_key=True, serialize=False)),
                ('technology', models.CharField(max_length=50, verbose_name='Technology')),
            ],
            options={
                'ordering': ['technology'],
            },
        ),
        migrations.CreateModel(
            name='TestScope',
            fields=[
                ('scope_id', models.AutoField(primary_key=True, serialize=False)),
                ('test_scope', models.CharField(max_length=150, verbose_name='Test Scope')),
            ],
            options={
                'ordering': ['test_scope'],
            },
        ),
        migrations.CreateModel(
            name='GenomicTest',
            fields=[
                ('test_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=10, verbose_name='Test Directory Version')),
                ('test_code', models.CharField(max_length=15, verbose_name='Test Code')),
                ('test_name', models.TextField(verbose_name='Test Name')),
                ('currently_provided', models.CharField(max_length=20, verbose_name='Currently Provided')),
                ('inhouse_technology', models.TextField(verbose_name='In-House Test')),
                ('eligibility', models.TextField(verbose_name='Eligibility Criteria')),
                ('tt_code', models.CharField(max_length=10, verbose_name='TT Code')),
                ('cc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.CommissioningCategory', verbose_name='Commissioning Category')),
                ('ci_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.ClinicalIndication', verbose_name='CI Code')),
                ('citt_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.CITTComment', verbose_name='CITT Comment')),
                ('family_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.OptimalFamilyStructure', verbose_name='Optimal Family Structure')),
                ('scope_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.TestScope', verbose_name='Test Scope')),
                ('specialist_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.SpecialistTestGroup', verbose_name='Specialist Test Group')),
                ('targets_desirable', models.ManyToManyField(related_name='DesirableTarget_related', through='ngtdc_db.DesirableTarget', to='ngtdc_db.Target', verbose_name='Targets (Desirable)')),
                ('targets_essential', models.ManyToManyField(related_name='EssentialTarget_related', through='ngtdc_db.EssentialTarget', to='ngtdc_db.Target', verbose_name='Targets (Essential)')),
                ('tech_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.Technology', verbose_name='Technology')),
            ],
        ),
        migrations.AddField(
            model_name='essentialtarget',
            name='target_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.Target', verbose_name='Target'),
        ),
        migrations.AddField(
            model_name='essentialtarget',
            name='test_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.GenomicTest', verbose_name='Test Code'),
        ),
        migrations.AddField(
            model_name='desirabletarget',
            name='target_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.Target', verbose_name='Target'),
        ),
        migrations.AddField(
            model_name='desirabletarget',
            name='test_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngtdc_db.GenomicTest', verbose_name='Test Code'),
        ),
    ]
